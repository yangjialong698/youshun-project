<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfopurchase.dao.OaRejectsOpinionMapper">
    <resultMap id="BaseResultMap" type="com.ennova.pubinfopurchase.entity.OaRejectsOpinion">
        <!--@mbg.generated-->
        <!--@Table project.oa_rejects_opinion-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rejects_id" jdbcType="INTEGER" property="rejectsId"/>
        <result column="opinion_user_id" jdbcType="INTEGER" property="opinionUserId"/>
        <result column="opinion_user" jdbcType="VARCHAR" property="opinionUser"/>
        <result column="setp_staus" jdbcType="INTEGER" property="setpStaus"/>
        <result column="opinion_content" jdbcType="VARCHAR" property="opinionContent"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime"/>
        <result column="overtime" jdbcType="TIMESTAMP" property="overtime"/>
        <result column="del_flag" jdbcType="INTEGER" property="delFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        rejects_id,
        opinion_user_id,
        opinion_user,
        setp_staus,
        opinion_content,
        create_time,
        publish_time,
        overtime,
        del_flag
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from project.oa_rejects_opinion
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        update project.oa_rejects_opinion
        set del_flag = 1
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ennova.pubinfopurchase.entity.OaRejectsOpinion">
        <!--@mbg.generated-->
        insert into project.oa_rejects_opinion (id, rejects_id, opinion_user_id,
                                                opinion_user, setp_staus, opinion_content,
                                                create_time, publish_time, overtime,
                                                del_flag)
        values (#{id,jdbcType=INTEGER}, #{rejectsId,jdbcType=INTEGER}, #{opinionUserId,jdbcType=INTEGER},
                #{opinionUser,jdbcType=VARCHAR}, #{setpStaus,jdbcType=INTEGER}, #{opinionContent,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{publishTime,jdbcType=TIMESTAMP}, #{overtime,jdbcType=TIMESTAMP},
                #{delFlag,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ennova.pubinfopurchase.entity.OaRejectsOpinion">
        <!--@mbg.generated-->
        insert into project.oa_rejects_opinion
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rejectsId != null">
                rejects_id,
            </if>
            <if test="opinionUserId != null">
                opinion_user_id,
            </if>
            <if test="opinionUser != null">
                opinion_user,
            </if>
            <if test="setpStaus != null">
                setp_staus,
            </if>
            <if test="opinionContent != null">
                opinion_content,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="publishTime != null">
                publish_time,
            </if>
            <if test="overtime != null">
                overtime,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rejectsId != null">
                #{rejectsId,jdbcType=INTEGER},
            </if>
            <if test="opinionUserId != null">
                #{opinionUserId,jdbcType=INTEGER},
            </if>
            <if test="opinionUser != null">
                #{opinionUser,jdbcType=VARCHAR},
            </if>
            <if test="setpStaus != null">
                #{setpStaus,jdbcType=INTEGER},
            </if>
            <if test="opinionContent != null">
                #{opinionContent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishTime != null">
                #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="overtime != null">
                #{overtime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfopurchase.entity.OaRejectsOpinion">
        <!--@mbg.generated-->
        update project.oa_rejects_opinion
        <set>
            <if test="rejectsId != null">
                rejects_id = #{rejectsId,jdbcType=INTEGER},
            </if>
            <if test="opinionUserId != null">
                opinion_user_id = #{opinionUserId,jdbcType=INTEGER},
            </if>
            <if test="opinionUser != null">
                opinion_user = #{opinionUser,jdbcType=VARCHAR},
            </if>
            <if test="setpStaus != null">
                setp_staus = #{setpStaus,jdbcType=INTEGER},
            </if>
            <if test="opinionContent != null">
                opinion_content = #{opinionContent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="overtime != null">
                overtime = #{overtime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfopurchase.entity.OaRejectsOpinion">
        <!--@mbg.generated-->
        update project.oa_rejects_opinion
        set rejects_id      = #{rejectsId,jdbcType=INTEGER},
            opinion_user_id = #{opinionUserId,jdbcType=INTEGER},
            opinion_user    = #{opinionUser,jdbcType=VARCHAR},
            setp_staus      = #{setpStaus,jdbcType=INTEGER},
            opinion_content = #{opinionContent,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            publish_time    = #{publishTime,jdbcType=TIMESTAMP},
            overtime        = #{overtime,jdbcType=TIMESTAMP},
            del_flag        = #{delFlag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update project.oa_rejects_opinion
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="rejects_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.rejectsId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="opinion_user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.opinionUserId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="opinion_user = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.opinionUser,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="setp_staus = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.setpStaus,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="opinion_content = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.opinionContent,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="publish_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.publishTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="overtime = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.overtime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="del_flag = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.delFlag,jdbcType=INTEGER}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into project.oa_rejects_opinion
        (id, rejects_id, opinion_user_id, opinion_user, setp_staus, opinion_content, create_time,
         publish_time, overtime, del_flag)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.rejectsId,jdbcType=INTEGER}, #{item.opinionUserId,jdbcType=INTEGER},
             #{item.opinionUser,jdbcType=VARCHAR}, #{item.setpStaus,jdbcType=INTEGER},
             #{item.opinionContent,jdbcType=VARCHAR},
             #{item.createTime,jdbcType=TIMESTAMP}, #{item.publishTime,jdbcType=TIMESTAMP},
             #{item.overtime,jdbcType=TIMESTAMP}, #{item.delFlag,jdbcType=INTEGER})
        </foreach>
    </insert>

    <select id="selectByRejectsId" resultType="com.ennova.pubinfopurchase.vo.OaRejectsOpinionVO">
        select id,
               rejects_id      as rejectsId,
               opinion_user_id as opinionUserId,
               opinion_user    as opinionUser,
               setp_staus      as setpStaus,
               opinion_content as opinionContent,
               create_time     as createTime,
               publish_time    as publishTime,
               overtime,
               del_flag as delFlag
        from oa_rejects_opinion
        where del_flag = 0
          and rejects_id = #{rejectsId,jdbcType=INTEGER}
    </select>

    <select id="selectByRejectsIdAndSetpStaus" resultType="com.ennova.pubinfopurchase.vo.OaRejectsOpinionVO">
        select id,
               rejects_id      as rejectsId,
               opinion_user_id as opinionUserId,
               opinion_user    as opinionUser,
               setp_staus      as setpStaus,
               opinion_content as opinionContent,
               create_time     as createTime,
               publish_time    as publishTime,
               overtime,
               del_flag as delFlag
        from oa_rejects_opinion
        <where>
            del_flag = 0
            <if test="rejectsId != null">
                and rejects_id = #{rejectsId,jdbcType=INTEGER}
            </if>
            <if test="setpStaus != null">
                and setp_staus = #{setpStaus,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="selectByRejectsIdAndOpinionUserId" resultType="com.ennova.pubinfopurchase.vo.OaRejectsOpinionVO">
        select id,
        rejects_id      as rejectsId,
        opinion_user_id as opinionUserId,
        opinion_user    as opinionUser,
        setp_staus      as setpStaus,
        opinion_content as opinionContent,
        create_time     as createTime,
        publish_time    as publishTime,
        overtime,
        del_flag as delFlag
        from oa_rejects_opinion
        <where>
            del_flag = 0
            <if test="rejectsId != null">
                and rejects_id = #{rejectsId,jdbcType=INTEGER}
            </if>
            <if test="opinionUserId != null">
                and opinion_user_id = #{opinionUserId,jdbcType=INTEGER}
            </if>
            <if test="setpStaus != null">
                and setp_staus = #{setpStaus,jdbcType=INTEGER}
            </if>
        </where>
    </select>
</mapper>