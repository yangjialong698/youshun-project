<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfodaily.dao.YsDailyFeedBackMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfodaily.entity.YsDailyFeedBack">
    <!--@mbg.generated-->
    <!--@Table ys_daily_feed_back-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="daily_rep_id" jdbcType="INTEGER" property="dailyRepId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="feed_content" jdbcType="VARCHAR" property="feedContent" />
    <result column="feed_status" jdbcType="INTEGER" property="feedStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, daily_rep_id, user_id, feed_content, feed_status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from ys_daily_feed_back
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from ys_daily_feed_back
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_daily_feed_back (daily_rep_id, user_id, feed_content, 
      feed_status, create_time)
    values (#{dailyRepId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{feedContent,jdbcType=VARCHAR}, 
      #{feedStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_daily_feed_back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dailyRepId != null">
        daily_rep_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="feedContent != null">
        feed_content,
      </if>
      <if test="feedStatus != null">
        feed_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dailyRepId != null">
        #{dailyRepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedContent != null">
        #{feedContent,jdbcType=VARCHAR},
      </if>
      <if test="feedStatus != null">
        #{feedStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack">
    <!--@mbg.generated-->
    update ys_daily_feed_back
    <set>
      <if test="dailyRepId != null">
        daily_rep_id = #{dailyRepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedContent != null">
        feed_content = #{feedContent,jdbcType=VARCHAR},
      </if>
      <if test="feedStatus != null">
        feed_status = #{feedStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack">
    <!--@mbg.generated-->
    update ys_daily_feed_back
    set daily_rep_id = #{dailyRepId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      feed_content = #{feedContent,jdbcType=VARCHAR},
      feed_status = #{feedStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ys_daily_feed_back
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="daily_rep_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.dailyRepId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="feed_content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.feedContent,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="feed_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.feedStatus,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ys_daily_feed_back
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="daily_rep_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.dailyRepId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.dailyRepId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="feed_content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.feedContent != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.feedContent,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="feed_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.feedStatus != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.feedStatus,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_daily_feed_back
    (daily_rep_id, user_id, feed_content, feed_status, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.dailyRepId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.feedContent,jdbcType=VARCHAR}, 
        #{item.feedStatus,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_daily_feed_back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      daily_rep_id,
      user_id,
      feed_content,
      feed_status,
      create_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{dailyRepId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER},
      #{feedContent,jdbcType=VARCHAR},
      #{feedStatus,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      daily_rep_id = #{dailyRepId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      feed_content = #{feedContent,jdbcType=VARCHAR},
      feed_status = #{feedStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfodaily.entity.YsDailyFeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_daily_feed_back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dailyRepId != null">
        daily_rep_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="feedContent != null">
        feed_content,
      </if>
      <if test="feedStatus != null">
        feed_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dailyRepId != null">
        #{dailyRepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedContent != null">
        #{feedContent,jdbcType=VARCHAR},
      </if>
      <if test="feedStatus != null">
        #{feedStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="dailyRepId != null">
        daily_rep_id = #{dailyRepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="feedContent != null">
        feed_content = #{feedContent,jdbcType=VARCHAR},
      </if>
      <if test="feedStatus != null">
        feed_status = #{feedStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>