<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfouser.dao.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfouser.entity.LoginLog">
    <!--@mbg.generated-->
    <!--@Table t_login_log-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="request_ip" jdbcType="VARCHAR" property="requestIp" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="ua" jdbcType="VARCHAR" property="ua" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, request_ip, user_id, user_name, account, description, login_date, ua, `location`, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfouser.entity.LoginLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_login_log (request_ip, user_id, user_name, 
      account, description, login_date, 
      ua, `location`, create_time
      )
    values (#{requestIp,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{ua,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfouser.entity.LoginLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requestIp != null">
        request_ip,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="ua != null">
        ua,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requestIp != null">
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ua != null">
        #{ua,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfouser.entity.LoginLog">
    <!--@mbg.generated-->
    update t_login_log
    <set>
      <if test="requestIp != null">
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ua != null">
        ua = #{ua,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfouser.entity.LoginLog">
    <!--@mbg.generated-->
    update t_login_log
    set request_ip = #{requestIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      ua = #{ua,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_login_log
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="request_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.requestIp,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="account = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.account,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="login_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.loginDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="ua = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.ua,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`location` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.location,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_login_log
    (request_ip, user_id, user_name, account, description, login_date, ua, `location`, 
      create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.requestIp,jdbcType=VARCHAR}, #{item.userId,jdbcType=INTEGER}, #{item.userName,jdbcType=VARCHAR}, 
        #{item.account,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.loginDate,jdbcType=TIMESTAMP}, 
        #{item.ua,jdbcType=VARCHAR}, #{item.location,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <select id="getTotalVisit" resultType="java.lang.Integer">
    select count(*) from t_login_log
  </select>
</mapper>