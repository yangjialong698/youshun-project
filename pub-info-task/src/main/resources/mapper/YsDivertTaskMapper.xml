<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfotask.dao.YsDivertTaskMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfotask.entity.YsDivertTask">
    <!--@mbg.generated-->
    <!--@Table ys_divert_task-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ys_master_task_id" jdbcType="INTEGER" property="ysMasterTaskId" />
    <result column="divert_user_id" jdbcType="INTEGER" property="divertUserId" />
    <result column="receive_id" jdbcType="INTEGER" property="receiveId" />
    <result column="divert_time" jdbcType="TIMESTAMP" property="divertTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, ys_master_task_id, divert_user_id, receive_id, divert_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from ys_divert_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from ys_divert_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfotask.entity.YsDivertTask" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_divert_task (ys_master_task_id, divert_user_id, receive_id, 
      divert_time, create_time, update_time
      )
    values (#{ysMasterTaskId,jdbcType=INTEGER}, #{divertUserId,jdbcType=INTEGER}, #{receiveId,jdbcType=INTEGER}, 
      #{divertTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfotask.entity.YsDivertTask" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_divert_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ysMasterTaskId != null">
        ys_master_task_id,
      </if>
      <if test="divertUserId != null">
        divert_user_id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="divertTime != null">
        divert_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ysMasterTaskId != null">
        #{ysMasterTaskId,jdbcType=INTEGER},
      </if>
      <if test="divertUserId != null">
        #{divertUserId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="divertTime != null">
        #{divertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfotask.entity.YsDivertTask">
    <!--@mbg.generated-->
    update ys_divert_task
    <set>
      <if test="ysMasterTaskId != null">
        ys_master_task_id = #{ysMasterTaskId,jdbcType=INTEGER},
      </if>
      <if test="divertUserId != null">
        divert_user_id = #{divertUserId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="divertTime != null">
        divert_time = #{divertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfotask.entity.YsDivertTask">
    <!--@mbg.generated-->
    update ys_divert_task
    set ys_master_task_id = #{ysMasterTaskId,jdbcType=INTEGER},
      divert_user_id = #{divertUserId,jdbcType=INTEGER},
      receive_id = #{receiveId,jdbcType=INTEGER},
      divert_time = #{divertTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ys_divert_task
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="ys_master_task_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.ysMasterTaskId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="divert_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.divertUserId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="receive_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.receiveId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="divert_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.divertTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_divert_task
    (ys_master_task_id, divert_user_id, receive_id, divert_time, create_time, update_time
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.ysMasterTaskId,jdbcType=INTEGER}, #{item.divertUserId,jdbcType=INTEGER}, 
        #{item.receiveId,jdbcType=INTEGER}, #{item.divertTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>