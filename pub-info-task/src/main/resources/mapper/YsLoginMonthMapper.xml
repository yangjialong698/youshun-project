<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfotask.dao.YsLoginMonthMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfotask.entity.YsLoginMonth">
    <!--@mbg.generated-->
    <!--@Table ys_login_month-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="count_num" jdbcType="INTEGER" property="count" />
    <result column="login_date" jdbcType="VARCHAR" property="loginDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, user_name, count_num, login_date, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from ys_login_month
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from ys_login_month
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfotask.entity.YsLoginMonth" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_login_month (user_id, user_name, count_num, 
      login_date, create_time, update_time
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
      #{loginDate,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfotask.entity.YsLoginMonth" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ys_login_month
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="count != null">
        count_num,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfotask.entity.YsLoginMonth">
    <!--@mbg.generated-->
    update ys_login_month
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count_num = #{count,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfotask.entity.YsLoginMonth">
    <!--@mbg.generated-->
    update ys_login_month
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      count_num = #{count,jdbcType=INTEGER},
      login_date = #{loginDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
<select id="selectByCountNumAndLoginDateAndUserIdAndUserName" resultMap="BaseResultMap">
  select <include refid="Base_Column_List"/>
    from ys_login_month
    <where>
      <if test="count != null">
        and count_num=#{count,jdbcType=INTEGER}
      </if>
      <if test="loginDate != null">
        and login_date=#{loginDate,jdbcType=VARCHAR}
      </if>
      <if test="userId != null">
        and user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="userName != null">
        and user_name=#{userName,jdbcType=VARCHAR}
      </if>
    </where>
</select>
<select id="selectAllByUserNameAndLoginDate" resultMap="BaseResultMap">
  select <include refid="Base_Column_List"/>
    from ys_login_month
    <where>
      <if test="userName != null">
        and user_name like concat('%',#{userName,jdbcType=VARCHAR},'%')
      </if>
      <if test="loginDate != null">
        and login_date=#{loginDate,jdbcType=VARCHAR}
      </if>
    </where>
    order by count_num desc, login_date desc, user_name desc
</select>
</mapper>