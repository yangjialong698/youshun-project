<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfostore.dao.ScProblemFileMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfostore.entity.ScProblemFile">
    <!--@mbg.generated-->
    <!--@Table sc_problem_file-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="problem_feedback_id" jdbcType="INTEGER" property="problemFeedbackId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="file_md5" jdbcType="VARCHAR" property="fileMd5" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="ys_file_url" jdbcType="VARCHAR" property="ysFileUrl" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="open_file" jdbcType="INTEGER" property="openFile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="file_type" jdbcType="INTEGER" property="fileType" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, problem_feedback_id, `name`, file_md5, file_size, file_url, ys_file_url, del_flag, open_file,
    create_time, update_time, user_id, file_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sc_problem_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sc_problem_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfostore.entity.ScProblemFile" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sc_problem_file (problem_feedback_id, `name`, file_md5,
      file_size, file_url, ys_file_url, del_flag,
      open_file, create_time, update_time,
      user_id)
    values (#{problemFeedbackId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{fileMd5,jdbcType=VARCHAR},
      #{fileSize,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR},#{ysFileUrl,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER},
      #{openFile,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfostore.entity.ScProblemFile" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sc_problem_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="problemFeedbackId != null">
        problem_feedback_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="fileMd5 != null">
        file_md5,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="ysFileUrl != null">
        ys_file_url,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="openFile != null">
        open_file,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="problemFeedbackId != null">
        #{problemFeedbackId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fileMd5 != null">
        #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="ysFileUrl != null">
        #{ysFileUrl,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="openFile != null">
        #{openFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfostore.entity.ScProblemFile">
    <!--@mbg.generated-->
    update sc_problem_file
    <set>
      <if test="problemFeedbackId != null">
        problem_feedback_id = #{problemFeedbackId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fileMd5 != null">
        file_md5 = #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="ysFileUrl != null">
        ys_file_url = #{ysFileUrl,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="openFile != null">
        open_file = #{openFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfostore.entity.ScProblemFile">
    <!--@mbg.generated-->
    update sc_problem_file
    set problem_feedback_id = #{problemFeedbackId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      file_md5 = #{fileMd5,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      open_file = #{openFile,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sc_problem_file
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="problem_feedback_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.problemFeedbackId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="file_md5 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.fileMd5,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="file_size = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.fileSize,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="file_url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.fileUrl,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="del_flag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.delFlag,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="open_file = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.openFile,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sc_problem_file
    (problem_feedback_id, `name`, file_md5, file_size, file_url, del_flag, open_file,
      create_time, update_time, user_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.problemFeedbackId,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.fileMd5,jdbcType=VARCHAR},
        #{item.fileSize,jdbcType=VARCHAR}, #{item.fileUrl,jdbcType=VARCHAR}, #{item.delFlag,jdbcType=INTEGER},
        #{item.openFile,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP},
        #{item.userId,jdbcType=INTEGER})
    </foreach>
  </insert>

  <select id="selectFilesByProblemId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sc_problem_file
    <where>
      del_flag != 1
    <if test="ProblemId != null">
      and problem_feedback_id = #{ProblemId,jdbcType=INTEGER}
    </if>
      <if test="fileType != null">
        and file_type = #{fileType,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectFilesByProblemIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sc_problem_file
    <where>
      del_flag != 1
      <if test="ProblemId != null">
        and problem_feedback_id = #{ProblemId,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectAllByFileMd5AndUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sc_problem_file
    <where>
      del_flag = 0
      <if test="fileMd5 != null">
        and file_md5 = #{fileMd5,jdbcType=VARCHAR}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="selectByFileMd5" resultType="java.lang.Integer">
    select count(id)
    from sc_problem_file
    where del_flag = 0 and file_md5 = #{fileMd5}
  </select>
</mapper>