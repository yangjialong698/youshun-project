<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ennova.pubinfoproduct.daos.ErpReworkRepairMapper">
  <resultMap id="BaseResultMap" type="com.ennova.pubinfoproduct.entity.ErpReworkRepair">
    <!--@mbg.generated-->
    <!--@Table erp_rework_repair-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="back_user_id" jdbcType="INTEGER" property="backUserId" />
    <result column="supplier_no" jdbcType="INTEGER" property="supplierNo" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="product_no" jdbcType="VARCHAR" property="productNo" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="rework_reason" jdbcType="VARCHAR" property="reworkReason" />
    <result column="rework_hour" jdbcType="INTEGER" property="reworkHour" />
    <result column="rework_time" jdbcType="TIMESTAMP" property="reworkTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, back_user_id, supplier_no, supplier, product_no, product_name, num, total_num, 
    rework_reason, rework_hour, rework_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from erp_rework_repair
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from erp_rework_repair
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into erp_rework_repair (back_user_id, supplier_no, supplier, 
      product_no, product_name, num, 
      total_num, rework_reason, rework_hour, 
      rework_time)
    values (#{backUserId,jdbcType=INTEGER}, #{supplierNo,jdbcType=INTEGER}, #{supplier,jdbcType=VARCHAR}, 
      #{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{totalNum,jdbcType=INTEGER}, #{reworkReason,jdbcType=VARCHAR}, #{reworkHour,jdbcType=INTEGER}, 
      #{reworkTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into erp_rework_repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="backUserId != null">
        back_user_id,
      </if>
      <if test="supplierNo != null">
        supplier_no,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="reworkReason != null">
        rework_reason,
      </if>
      <if test="reworkHour != null">
        rework_hour,
      </if>
      <if test="reworkTime != null">
        rework_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="backUserId != null">
        #{backUserId,jdbcType=INTEGER},
      </if>
      <if test="supplierNo != null">
        #{supplierNo,jdbcType=INTEGER},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="reworkReason != null">
        #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkHour != null">
        #{reworkHour,jdbcType=INTEGER},
      </if>
      <if test="reworkTime != null">
        #{reworkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair">
    <!--@mbg.generated-->
    update erp_rework_repair
    <set>
      <if test="backUserId != null">
        back_user_id = #{backUserId,jdbcType=INTEGER},
      </if>
      <if test="supplierNo != null">
        supplier_no = #{supplierNo,jdbcType=INTEGER},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="reworkReason != null">
        rework_reason = #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkHour != null">
        rework_hour = #{reworkHour,jdbcType=INTEGER},
      </if>
      <if test="reworkTime != null">
        rework_time = #{reworkTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair">
    <!--@mbg.generated-->
    update erp_rework_repair
    set back_user_id = #{backUserId,jdbcType=INTEGER},
      supplier_no = #{supplierNo,jdbcType=INTEGER},
      supplier = #{supplier,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      total_num = #{totalNum,jdbcType=INTEGER},
      rework_reason = #{reworkReason,jdbcType=VARCHAR},
      rework_hour = #{reworkHour,jdbcType=INTEGER},
      rework_time = #{reworkTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into erp_rework_repair
    (back_user_id, supplier_no, supplier, product_no, product_name, num, total_num, rework_reason, 
      rework_hour, rework_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.backUserId,jdbcType=INTEGER}, #{item.supplierNo,jdbcType=INTEGER}, #{item.supplier,jdbcType=VARCHAR}, 
        #{item.productNo,jdbcType=VARCHAR}, #{item.productName,jdbcType=VARCHAR}, #{item.num,jdbcType=INTEGER}, 
        #{item.totalNum,jdbcType=INTEGER}, #{item.reworkReason,jdbcType=VARCHAR}, #{item.reworkHour,jdbcType=INTEGER}, 
        #{item.reworkTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into erp_rework_repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      back_user_id,
      supplier_no,
      supplier,
      product_no,
      product_name,
      num,
      total_num,
      rework_reason,
      rework_hour,
      rework_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{backUserId,jdbcType=INTEGER},
      #{supplierNo,jdbcType=INTEGER},
      #{supplier,jdbcType=VARCHAR},
      #{productNo,jdbcType=VARCHAR},
      #{productName,jdbcType=VARCHAR},
      #{num,jdbcType=INTEGER},
      #{totalNum,jdbcType=INTEGER},
      #{reworkReason,jdbcType=VARCHAR},
      #{reworkHour,jdbcType=INTEGER},
      #{reworkTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      back_user_id = #{backUserId,jdbcType=INTEGER},
      supplier_no = #{supplierNo,jdbcType=INTEGER},
      supplier = #{supplier,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      total_num = #{totalNum,jdbcType=INTEGER},
      rework_reason = #{reworkReason,jdbcType=VARCHAR},
      rework_hour = #{reworkHour,jdbcType=INTEGER},
      rework_time = #{reworkTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ennova.pubinfoproduct.entity.ErpReworkRepair" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into erp_rework_repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="backUserId != null">
        back_user_id,
      </if>
      <if test="supplierNo != null">
        supplier_no,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="reworkReason != null">
        rework_reason,
      </if>
      <if test="reworkHour != null">
        rework_hour,
      </if>
      <if test="reworkTime != null">
        rework_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="backUserId != null">
        #{backUserId,jdbcType=INTEGER},
      </if>
      <if test="supplierNo != null">
        #{supplierNo,jdbcType=INTEGER},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="reworkReason != null">
        #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkHour != null">
        #{reworkHour,jdbcType=INTEGER},
      </if>
      <if test="reworkTime != null">
        #{reworkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="backUserId != null">
        back_user_id = #{backUserId,jdbcType=INTEGER},
      </if>
      <if test="supplierNo != null">
        supplier_no = #{supplierNo,jdbcType=INTEGER},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="reworkReason != null">
        rework_reason = #{reworkReason,jdbcType=VARCHAR},
      </if>
      <if test="reworkHour != null">
        rework_hour = #{reworkHour,jdbcType=INTEGER},
      </if>
      <if test="reworkTime != null">
        rework_time = #{reworkTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from erp_rework_repair
    where 1=1
    <if test="key != null and key != ''">
      and concat(supplier,product_no,product_name) like concat('%',trim(#{key}),'%')
    </if>
  </select>

<!--  根据年、月份，查询不良率和供应商编码-->
    <select id="selectByReworkTime" resultType="com.ennova.pubinfoproduct.vo.DefectRateVO">
      SELECT
        supplier_no as supplierNo,
        round(avg(num/total_num),2) as defectRate
      FROM
        `erp_rework_repair`
      WHERE
        YEAR ( rework_time )= #{year}
        AND MONTH ( rework_time )=  #{month}
      group by supplier_no
    </select>
</mapper>